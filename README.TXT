
When given the graph of a mountain modeled by a function of two variables, how can a virtual character most efficiently ascend its slopes?  Given a function representing the surface of a mountain, we were asked to create an algorithm to determine the most direct route up the slope without exceeding a 45° climb at any point in the path. To find such a route, we created an algorithm which calculated the desired “next step” for the trail given a point on the mountain. The next step was deemed the step in which the angle of ascent was greatest without exceeding the restriction.  These calculations ignored future ramifications of steps, but assured each step was productive in reaching the peak by continuously ascending. A computer simulation was used to model each step up to the peak of the mountain.  Our method could be used to give park designers ideal trail routes which would optimize efficiency while keeping the trail hikeable. The only necessity would be a function of two variables which models the mountain’s terrain.




